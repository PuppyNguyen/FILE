stages:
  - build
  - deploy

####################################################################
#### RULES
####################################################################

.rules_build:
  rules:
    - if: '$CI_COMMIT_BRANCH == "main"'
      when: manual

.rules_deploy:
  rules:
    - if: '$CI_COMMIT_BRANCH == "main"'
      when: on_success

####################################################################
#### Build
#####################################################################
build:
  extends: .rules_build
  stage: build
  script:
    - echo "$PASSWORD_REGISTRY" | docker login "$URL_REGISTRY" -u "$USER_REGISTRY" --password-stdin
    - docker build -t becoxy/core:es-file-api -f src/EA.Api.FILE/Dockerfile .
    - echo "$PASSWORD_REGISTRY" | docker login "$URL_REGISTRY" -u "$USER_REGISTRY" --password-stdin
    - docker push becoxy/core:es-file-api
  tags:
    - dotnet

#####################################################################
#### Deploy
#####################################################################
deploy:
  extends: .rules_deploy
  stage: deploy
  before_script:
    - "command -v ssh-agent >/dev/null || ( apt-get update -y && apt-get install openssh-client -y )"
    - eval $(ssh-agent -s)
    - echo "$SSH_KEY" | tr -d '\r' | ssh-add -
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - ssh-keyscan -H $SSH_IP >> ~/.ssh/known_hosts
    - '[[ -f /.dockerenv ]] && echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config'
  script:
    - echo "$SSH_KEY" > id.rsa
    - chmod 700 id.rsa
    - ssh -o StrictHostKeyChecking=no -i id.rsa $SSH_USER@$SSH_IP -p $SSH_PORT "cd /home/es-file-api && chmod +x deploy.sh && ./deploy.sh"
  tags:
    - dotnet
